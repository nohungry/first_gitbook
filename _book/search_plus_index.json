{"./":{"url":"./","title":"基本介紹","keywords":"","body":"GitBook 使用教學 簡單的介紹與如何安裝、編寫、生成、發布，爬過的坑。 GitBook官網位置 GitBook 官方網站： http://www.gitbook.io GitBook Github位置： https://github.com/GitbookIO/gitbook 使用版本 Node.js : v18.20.2 npm : 10.5.0 "},"document/nvmInstallStep.html":{"url":"document/nvmInstallStep.html","title":"NVM安装","keywords":"","body":"NVM 安裝指南 操作系統 Windows 11 安裝步驟 1. 下載 NVM for Windows 首先，前往 NVM for Windows 的 GitHub 頁面，下載最新的安裝程式。 2. 安裝 NVM 雙擊下載的安裝程序，按照提示完成安裝。安裝過程中可以選擇安裝目錄，默認情況下會安裝在 C:\\Program Files\\nodejs。 3. 驗證 NVM 安裝成功 安裝完成後，打開命令提示符或 PowerShell，運行以下命令 : $ nvm -v $ nvm version 4. 列出 NVM 命令 你可以運行以下命令來查看所有可用的 NVM 命令 : $ nvm help 5. 安裝特定的 Node.js 版本 運行以下命令安裝特定的 Node.js 版本 : # 查看可用的 Node.js 版本 $ nvm ls-remote # 安裝最新版本 $ nvm install node 6. 列出所有已安裝的 Node.js 版本 運行以下命令查看已安裝的 Node.js 版本 : $ nvm ls 7. 切換使用的 Node.js 版本 運行以下命令來使用特定的 Node.js 版本 : $ nvm use $ nvm use 18.20.2 8. 解除安裝特定的 Node.js 版本 運行以下命令來解除安裝特定的 Node.js 版本 : $ nvm uninstall $ nvm uninstall 20.15.0 "},"document/nodeInstallStep.html":{"url":"document/nodeInstallStep.html","title":"Node.js安装","keywords":"","body":"GitBook 安装 GitBook 使用 NPM 進行安裝, 命令行中輸入下面的命令進行安裝 : $ npm install gitbook-cli -g -g : 全域安裝 Tips: 後續測試不使用全域也無所謂, 可以直接在自定義的 GitBook 專案目錄底下直接安裝, 不過要先在專案目錄底下 npm init -y Tips: 後續測試安裝 gitbook-cli 會跳出套件上的相容與依賴項存在漏洞56 vulnerabilities (1 low, 19 moderate, 29 high, 7 critical), 先不處理仍然可以正常跑 確認安裝完成 $ gitbook -V 遇到的問題 1. 使用 gitbook init, 彈出錯誤警告 $ gitbook init 打開 C:\\Users\\\\AppData\\Roaming\\nvm\\v18.20.2\\node_modules\\gitbook-cli\\node_modules\\npm\\node_modules\\graceful-fs\\polyfills.js 註解 62 - 64 行的code // fs.stat = statFix(fs.stat) // fs.fstat = statFix(fs.fstat) // fs.lstat = statFix(fs.lstat) 2. 解決完第一步後, gitbook init, 彈出另外的錯誤警告 $ gitbook init 執行 debug 命令 $ gitbook init --debug 打開 C:\\Users\\\\.gitbook\\versions\\3.2.3\\lib\\init.js 註解 72 行的code // return fs.writeFile(filePath, summary.toText(extension)); return summary.toText(extension).then(stx=>{return fs.writeFile(filePath, stx);}); "},"document/gitBookCli.html":{"url":"document/gitBookCli.html","title":"GitBook命令行瀏覽","keywords":"","body":"GitBook 命令行瀏覽 本地預覽 $ gitbook serve ./{book_name} 輸出靜態網站 $ gitbook build ./{book_name} --output=./{outputFolde} 幫助 $ gitbook -h Usage: gitbook [options] [command] Commands: build [options] [source_dir] Build a gitbook from a directory serve [options] [source_dir] Build then serve a gitbook from a directory install [options] [source_dir] Install plugins for a book pdf [options] [source_dir] Build a gitbook as a PDF epub [options] [source_dir] Build a gitbook as a ePub book mobi [options] [source_dir] Build a gitbook as a Mobi book init [source_dir] Create files and folders based on contents of SUMMARY.md publish [source_dir] Publish content to the associated gitbook.io book git:remote [source_dir] [book_id] Adds a git remote to a book repository Options: -h, --help output usage information -V, --version output the version number "},"document/pushToGithubPages.html":{"url":"document/pushToGithubPages.html","title":"GitHub","keywords":"","body":"發佈 GitBook to Github 手動部屬流程 Push to Github, 然後另外開一個分支\"gh_pages\"(可以自定義), 先前我們有 gitbook build , 會產生出 _book 的資料夾, 在新的分支中只保留 _book 裡面的所有文件. Github Settings進入後, 點擊 Pages, 依照圖片填寫就可以升成一個靜態網頁。 "}}